stages:
- name: Backup
  steps:
  - runScriptConfig:
      image: java:8
      shellScript: |+
        #####################################
        apt-get update -y || true
        apt-get install vim -y || true
        echo "Installing tools"
        wget -O jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
        ln -s jq /usr/local/bin/jq
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        mv kubectl /usr/local/bin/

        #####################################

        DATE_TIME=$(date +%s)
        echo ### Do sed ###
        sed -i "s/NAME_SPACE/$NAME_SPACE/g" update-statefulset.sh
        sed -i "s/STS_NAME/$STS_NAME/g" update-statefulset.sh
        sed -i "s/REPLACE_ME_BY_DATETIME/$DATE_TIME/g" update-statefulset.sh
        echo ### finish do sed ###
        chmod +x *.sh
        #######################################















    env:
      NAME_SPACE: default
      STS_NAME: apache
- name: Config & Deploy
  steps:
  - runScriptConfig:
      image: java:8
      shellScript: "#####################################\napt-get update -y || true\napt-get install vim -y || true\necho \"Installing tools\"\nwget -O jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64\nchmod +x jq\nmv jq /usr/local/bin/\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\nchmod +x kubectl\nmv kubectl /usr/local/bin/\n\n#####################################\n\nBASE_IMAGE_TAG=$(cat pipeline-properties.json | jq -r .\"base_image\")\n\necho ### Do sed ###\necho $NAME_SPACE\necho $STS_NAME\nsed -i \"s/NAME_SPACE/$NAME_SPACE/g\" update-statefulset.sh\nsed -i \"s/STS_NAME/$STS_NAME/g\" update-statefulset.sh\nsed -i \"s/REPLACE_ME_BY_BASE_IMAGE_ID/$BASE_IMAGE_TAG/g\" update-statefulset.sh\n\n# REPLACE BLUE_OR_GREEN to determine what is the color of new deploy\n## dump check if previous deployment is blue or green\nkubectl -n $NAME_SPACE get sts | grep $STS_NAME > temp.file\n\nif grep -q \"blue\" temp.file; then\n\tnew_color=\"green\"\n    current_color=\"blue\"\nelse\n\tnew_color=\"blue\"\n    current_color=\"green\"\nfi\nsed -i \"s|BLUE_OR_GREEN|$new_color|g\" deployment/*.yaml\nsed -i \"s/NAME_SPACE/$NAME_SPACE/g\" deployment/*.yaml\nsed -i \"s/STS_NAME/$STS_NAME/g\" deployment/*.yaml\necho ### finish do sed ###\n\nchmod +x *.sh\nkubectl apply -f deployment/\n#./update-statefulset.sh\n\n#######################################\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    env:
      NAME_SPACE: nifa
      STS_NAME: apache
- name: Test
  steps:
  - runScriptConfig:
      image: java:8
      shellScript: |+
        #!/bin/bash

        sleep 3000
        curl -I "$ENDPOINT" > temp.file

        if grep -q "200" temp.file; then
        echo """
        ######## OK  #################
        Application Success Deployed
        ##############################




    env:
      ENDPOINT: http://34.220.214.50.nip.io
notification: {}
